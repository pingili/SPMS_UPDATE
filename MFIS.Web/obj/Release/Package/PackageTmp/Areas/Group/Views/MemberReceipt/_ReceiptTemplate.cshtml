@using BusinessEntities
@using CoreComponents

@model BusinessEntities.ReceiptMasterDto
@{
    var CashInHandDetails = ViewBag.CashInHandDetails;
    int indx = 0;
    List<ReceiptTranscationDto> lstGroupReceiptTranscation = Model != null ? Model.lstGroupReceiptTranscationDto : null;
    List<RepaymentDto> lstDemands = Model != null ? Model.lstRepeyment : null;

    <table class="table table-striped table-bordered table-hover" id="tblgropureceipt">
        <thead>
            <tr>
                <th class="col-lg-1">#</th>
                <th class="col-lg-2">A/C Code</th>
                <th class="col-lg-3">Account Head</th>
                <th class="col-lg-2">S.L.Account Number</th>
                <th class="col-lg-2 text-right">Demand</th>
                <th class="col-lg-2 text-right">Amount Received(Cr)</th>
                <th class="col-lg-2 text-right">Balance</th>
            </tr>
        </thead>
        <tbody>

            @if (lstGroupReceiptTranscation != null)
            {

                foreach (var item in lstGroupReceiptTranscation)
                {
                    if (item.IsMaster) 
                    {continue;}
                    
                    indx++;
                    
                    RepaymentDto repay = new RepaymentDto();
                    if (lstDemands != null)
                    {
                        if (lstDemands.Find(l => l.AHID == item.AHID) != null)
                        {
                            repay = lstDemands.Find(l => l.AHID == item.AHID);
                        }
                    }
                <tr class="gradeA odd">
                    <td>@indx</td>
                    <input type="hidden" id ="AHIDs_@indx" name ="AHIDs_@indx" value="@item.AHID"/>

                    <td id="AHCode">
                        @item.AHCode
                        <input type="hidden" id="AHID_@indx" name="AHID_@indx" value="@item.AHID" />
                    </td>

                    <td>

                        @(@item.AHName)
                        <input type="hidden" id="AHName_@indx" name="AHName_@indx" value="@item.AHName" />
                    </td>

                    <td>

                        @item.SLAccName

                    </td>

                    <td>
                        @(repay != null ? repay.Amount.ToDisplayCurrency() : "0")
                        <input type="hidden" id="hdnDemand_@indx"  value="@(repay != null ? repay.Amount.ToDisplayCurrency() : "0")" />
                    </td>
                    <td id="CRAmount" class="text-right">

                        <input style="text-align:right;" type="text" id="CrAmount_@indx" name="CrAmount_@indx" value="@item.CrAmount.ToDisplayCurrencyInRupees()" class="Amount" onkeypress="return validateNumbersOnly(event);" onchange="TotalCalucuation()"/>
                    </td>
                    <td class="text-right">
                        <input type="hidden" id="ClosingBalance_@indx" name="ClosingBalance_@indx" value="@item.OpeningBalance.ToDisplayCurrency()" />
                        @item.OpeningBalance
                    </td>
                </tr>
                }
            }
            <tr>
                <td>
                    <span><strong>TotalAmount:</strong></span>
                </td>
                <td>
                    <span>By</span>
                </td>
                <td>
                      <input type="hidden" id="hdnCashInHandAHID" name="hdnCashInHandAHID" value="@CashInHandDetails.AHID" />
                                        <span><strong id="AHIDs">@CashInHandDetails.AHName</strong></span>
                </td>
                <td>
                    <span>0</span>
                </td>
                <td>
                    @Html.LabelFor(m => m.DrTotal, new { @ID = "DrTotal" })
                </td>
                <td class="pull-right">
                    <span>
                     <strong>Balance : </strong>  @Html.Label("Balance",Model.DrTotal.ToDisplayCurrency(), new { @class = "from-control", @ID = "Balance" })
                    </span>
                </td>
                <td></td>
            </tr>
        </tbody>
    </table>
    <input type="hidden" id="index" name="index" value="@indx" />
                    
}

<script type="text/javascript">

    $(function () {
        function TotalCalucuation1() {
            
            TotalCalucuation();
        }
    });
    function TotalCalucuation()
    {     
            var sum = 0
            if (!isNaN(this.value) && this.value.length != 0) {
                sum += parseInt(this.value);
            }
        
    }
    $('input.Amount').change(function () {

        $("input.Amount").each(function () {

            $(this).keyup(function () {
                calculateSum();
            });

        });

    });
    function calculateSum() {
        var sum = 0;
        $("input.Amount").each(function () {

            if (!isNaN(this.value) && this.value.length != 0) {
                sum += parseFloat(this.value);
            }
        });
        $("#Balance").html(sum.toFixed(2));
    }
    $('#money').change(function () {
        
        var amountvalue = $('#money').val();
        if (!isNaN(amountvalue)) {
            var total = parseInt(amountvalue);
            var abc = 0;

            for (priority = 1; priority <= 255; priority++) {
                if (total > 0)
                    if ($('#CrAmount_' + priority)) {
                        var demand = $('#hdnDemand_' + priority).val();
                        if (demand != undefined) {
                            var demand2 = demand.replace(',', '');
                            if (parseInt(demand2) < total)
                                $('#CrAmount_' + priority).val(parseInt(demand2));
                            else
                                $('#CrAmount_' + priority).val(total);
                            total = total - demand2;
                        }
                    }
                calculateSum();
            }
        }
    });

    function ViewBalanceSummary() {
        var actionUrl = '@Url.Action("ViewBalanceSummary", "MemberReceipt")';
        var ahid = $('#hdnCashInHandAHID').val();
        $.post(actionUrl, { ahId: ahid, isFederation: true }, function (response) {
            if (response.BalanceType === "Dr") {
                $('#Balance').html(response.ClosingBalance);
            } else {
                $('#Balance').html(response.ClosingBalance);
            }

        }, 'json');
    }


</script>
