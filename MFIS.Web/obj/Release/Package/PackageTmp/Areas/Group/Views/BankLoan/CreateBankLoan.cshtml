@model BusinessEntities.BankLoanDto
@using CoreComponents;
@using BusinessEntities;
@{
    ViewBag.Title = "CreateBankLoan";
    Layout = "~/Views/Shared/_GroupLayout.cshtml";
}
@using (Html.BeginForm("CreateBankLoan", "BankLoan", FormMethod.Post))
{
    bool isView = ViewBag.isView;

    string loanCode = string.IsNullOrWhiteSpace(Model.LoanCode) ? "N/A" : Model.LoanCode;
    ResultDto res = TempData["Result"] != null ? TempData["Result"] as ResultDto : null;
    string message = res != null ? res.Message : string.Empty;
    if (!string.IsNullOrWhiteSpace(message))
    {
       // loanCode = ViewBag.Result.ObjectCode;
    }
    string LoanApplicationDate = string.Empty;
    <div class="row">
        <div class="col-lg-12">
            <!-- Form Elements -->
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <span class="header">Bank Loan Application @(!string.IsNullOrWhiteSpace(Model.Status) ? "(" + Model.Status + ")" : "")</span>
                    <button type="button" class="btn btn-default pull-right" onclick="BackToList();">Back To List</button>
                </div>
                @if (!string.IsNullOrWhiteSpace(message))
                {
                    <div class="alert @(res.ObjectId > 0 ? "alert-success" : "alert-danger")">
                        <strong>@(res.ObjectId > 0 ? "Success" : "Error")!</strong> @message
                    </div>
                }
                <div>
                    <div class="col-lg-12">

                        <div class="panel-heading">
                            <h4>Loan Application</h4>
                        </div>

                    </div>
                    <div class="panel-body">
                        <input type="hidden" value="@Model.LoanMasterId" id="LoanMasterId" name="LoanMasterId" />
                        <input type="hidden" value="@Model.BankLoanId" id="BankLoanId" name="BankLoanId" />
                        <div class="row" id="dvMain">
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Bank Name</label><br>
                                    @Html.DropDownListFor(d => Model.BankEntryId, (SelectList)ViewBag.slBankAh, "Select Bank", new { @class = "form-control required" })
                                    @Html.HiddenFor(m => m.LoanCode)
                                </div>
                            </div>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Requested Loan Date</label><br>
                                    @Html.TextBox("LoanRequestDate", Model.LoanRequestDate, new { @class = "form-control required", @id = "LoanRequestDate" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Requested Loan Amount</label>
                                    @Html.TextBox("LoanAmountRequested", Model.LoanAmountRequested.ToDisplayCurrency(), new { @class = "form-control required number-only", @onchange = "ChangeLoanAmount();" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label> GL Account Head Name</label>
                                    @Html.DropDownListFor(d => Model.GLAHId, (SelectList)ViewBag.slGLAHS, new { @class = "form-control required" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>SL Account Head</label><br />
                                    @Html.DropDownListFor(d => Model.SLAHId, (SelectList)ViewBag.slSLAHS, new { @class = "form-control required", @id = "slAHIds", @onchange = "return changeSLAH(" + Model.GroupId + ");" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>LoanNumber</label>
                                    @Html.TextBoxFor(model => model.LoanNumber, "", new { @class = "form-control required", @id = "LoanNumber", @name = "LoanNumber" })
                                </div>
                            </div>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Loan Approved Date</label><br>
                                    @Html.TextBox("LoanAmountApprovedDate", Model.LoanAmountApprovedDate, new { @class = "form-control required", @id = "txtLoanApprovedDate" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Approved Loan Amount</label>
                                    @Html.TextBox("LoanAmountApproved", Model.LoanAmountApproved.ToDisplayCurrency(), new { @class = "form-control required number-only" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div>
                        <div class="col-lg-12">
                            <div class="panel-heading">
                                <h4>Loan Disbursement</h4>
                            </div>

                        </div>
                        <div class="panel-body">
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>DisbursementDate</label><br>
                                    @Html.TextBox("DisbursedDate", Model.DisbursedDate, new { @class = "form-control required", @id = "DisbursedDate" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Disbursed Amount</label>
                                    @Html.TextBox("DisbursedAmount", Model.DisbursedAmount.ToDisplayCurrency(), new { @class = "form-control required number-only" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>No.Of Installments</label>
                                    <input type="text" name="NoofInstallments" maxlength="3" id="NoofInstallments" class="form-control required number-only"  />
                                </div>
                            </div>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Interest Rate %</label><br />
                                    @Html.TextBoxFor(model => model.InterestRate, "", new { @class = "form-control required number-only", @id = "InterestRate", @name = "InterestRate" })
                                </div>
                            </div>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Reference Number</label>
                                    @Html.TextBoxFor(m => m.ReferenceNumber, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>EMI</label>
                                    @Html.TextBoxFor(m => m.EMI, new { @class = "form-control required number-only" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>DueDate</label>
                                    @Html.TextBox("DueDate", Model.DueDate, new { @class = "form-control required", @id = "DueDate" })
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>Narration</label>
                                    @Html.TextBoxFor(m => m.Narration, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>

                        <div class="panel-footer">
                            <div class="form-group">
                                @if (!isView)
                                {
                                    if (String.IsNullOrEmpty(Model.Status))
                                    {
                                        <button type="submit" class="btn btn-outline btn-primary lock-dependent" onclick="return validation();">Submit</button>
                                    }
                                    else if (Model.Status.ToUpper() == "INITIATED" && Model.BankLoanId > 0)
                                    {
                                        <button type="submit" class="btn btn-outline btn-primary lock-dependent" onclick="return validateConfirm(false);" formaction="ConfirmMemberLoanApplication" formmethod="post">Confirm</button>
                                    }
                                }
                                @*<button type="reset" class="btn btn-outline btn-primary" onclick="return resetall('@ecnloanmasterid')">Reset</button>*@
                                <button type="button" class="btn btn-default pull-right" onclick="BackToList();">Back To List</button>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @section Scripts {

        @Scripts.Render("~/bundles/jqueryui")
        @Styles.Render("~/Content/cssjqryUi")
        <script type="text/javascript">
            $(document).ready(function () {
                menuLink = "menuTransactions";
                subMenuLink = "lnkSideBankLoanApplication";
                LoadMenu();
                $('#LoanRequestDate').datepicker({
                    dateFormat: "dd/M/yy",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-60:+0",
                });
                $('#txtLoanApprovedDate').datepicker({
                    dateFormat: "dd/M/yy",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-60:+0",
                    onSelect: function (selected) {
                        var dt = new Date(selected);
                        dt.setDate(dt.getDate() + 1);
                        $("#LoanRequestDate").datepicker("option", "minDate", dt);
                    }

                });

                $('#DisbursedDate').datepicker({
                    dateFormat: "dd/M/yy",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-60:+0",
                   
                    onSelect: function (selected) {
                        var dt = new Date(selected);
                        dt.setDate(dt.getDate() + 1);
                        $("#txtLoanApprovedDate").datepicker("option", "minDate", dt);
                    }
                });
                $('#DueDate').datepicker({
                    dateFormat: "dd/M/yy",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "-60:+0",
                    onSelect: function (selected) {
                        var dt = new Date(selected);
                        dt.setDate(dt.getDate() + 1);
                        $("#DisbursedDate").datepicker("option", "minDate", dt);
                    },
                    
                });

            });
            function changeSLAH(groupID) {
                var slAHid = $('#slAHIds').val();
                $.post('@Url.Action("checkLoanOutstnding")', { groupID: groupID, SLAHID: slAHid },
               function (data) {
                   if (data.IsExisted) {
                       alert("This group already having an outstanding amount please verify with bank")
                       return false;
                   }
                   else {
                       $('#LoanNumber').val(data.LinkageNumber);
                   }
               }, 'json');
            }
        </script>
    }
}

