@using BusinessEntities
@using CoreComponents

@model BusinessEntities.ReceiptMasterDto
@{

    int indx = 0;
    List<ReceiptTranscationDto> lstGroupReceiptTranscation = Model != null ? Model.lstGroupReceiptTranscationDto : null;

    <table class="table table-striped table-bordered table-hover" id="tblgropureceipt">
        <thead>
            <tr>
                <th class="col-lg-1">#</th>
                <!--<th>A/C Type</th>-->

                <th class="col-lg-2">A/C Code</th>
                <th class="col-lg-3">Account Head</th>
                <th class="col-lg-2">S.L.Account Number</th>
                <th class="col-lg-2 text-right">Demand</th>
                <th class="col-lg-2 text-right">Amount Received(Cr)</th>
                <th class="col-lg-2 text-right">Balance</th>
            </tr>
        </thead>
        <tbody>

            @if (lstGroupReceiptTranscation != null)
            {
                foreach (var item in lstGroupReceiptTranscation)
                {
                    indx++;
                <tr class="gradeA odd">
                    <td>@indx</td>
                    @*<input type="hidden" id ="AHIDs_@indx" name ="AHIDs_@indx" value="@item.AHID"/>*@

                    <td id="AHCode">
                        @item.AHCode
                        <input type="hidden" id="AHID_@indx" name="AHID_@indx" value="@item.AHID" />
                    </td>
                    <td>
                        @item.AHName
                        <input type="hidden" id="AHName_@indx" name="AHName_@indx" value="@item.AHName" />
                    </td>
                    <td>
                        @item.SLAccName
                    </td>
                    <td class="text-right">
                        <input type="hidden" id="OpeningBalance_@indx" name="OpeningBalance_@indx" value="@ViewBag.Repayments.Demand" />
                        @item.OpeningBalance.ToDisplayCurrency()
                    </td>
                    <td id="CRAmount" class="text-right">
                        <input style="text-align:right;" type="text" id="CrAmount_@indx" name="CrAmount_@indx" value="@item.CrAmount" class="Amount" onkeypress="return validateNumbersOnly(event);" />
                    </td>
                    <td class="text-right">
                        <input type="hidden" id="ClosingBalance_@indx" name="ClosingBalance_@indx" value="@item.ClosingBalance.ToDisplayCurrency()" />
                        @item.ClosingBalance
                    </td>
                </tr>
                }
            }
            @Html.Hidden("AccountHeadId", new { @Id = "AccountHeadId" })
                    @Html.Label("AccountName", new { @class = "from-control", @ID = "AccountName" })
@* <tr class="gradeA odd">
                                        <td></td>
                                        <td class="text-right"><strong>Total</strong><span id="formattext"></span> </td>
                                        <td colspan="4" class="text-center"><strong id="total"></strong></td>
                                    </tr>*@

            <tr>
                <td>
                    <span><strong>TotalAmount:</strong></span>
                </td>
                <td>
                    <span>By</span>
                </td>
                <td>
                    @*<input type="hidden" id="hdnCashInHandAHID" name="hdnCashInHandAHID" value="@ViewBag.CashInHandDetails.AHID" />
                                        <span><strong>@ViewBag.CashInHandDetails.AHName</strong></span>*@
                    @Html.Hidden("AccountHeadId", new { @Id = "AccountHeadId" })
                    @Html.Label("AccountName", new { @class = "from-control", @ID = "AccountName" })
                </td>
                <td>
                    <span>0</span>
                </td>
                <td>
                    @Html.LabelFor(m => m.DrTotal, new { @ID = "DrTotal" })
                    @*<span id="CrTotal">@Model.CrTotal</span>*@
                </td>
                <td>
                    <span>
                        @Html.Label("Balance", new { @class = "from-control", @ID = "Balance" })
                    </span>
                </td>
            </tr>
        </tbody>
    </table>
    <input type="hidden" id="index" name="index" value="@indx" />
                    
}
<script type="text/javascript">

    $('input.Amount').change(function () {

        $("input.Amount").each(function () {

            $(this).keyup(function () {
                calculateSum();
            });

        });

    });


    function calculateSum() {
        var sum = 0;
        $("input.Amount").each(function () {
            
            if (!isNaN(this.value) && this.value.length != 0) {
                sum += parseFloat(this.value);
            }
        });
        $("#Balance").html(sum.toFixed(2));
    }

    $('#money').change(function () {
        debugger;
        var totalamount = $('#money').val();
        if (!isNaN(totalamount)) {
            var total = parseInt(totalamount);
            for (i = 1; i < 100; i++) {
                if ($('#CrAmount_' + i)) {
                    var demand = parseInt($('#OpeningBalance_' + i).val());
                    if (demand < total)
                        $('#CrAmount_' + i).val(demand);
                    else if (total > 0)
                        $('#CrAmount_' + i).val(total);

                    total = total - demand;
                }
            }
        }

    });


</script>