@model BusinessEntities.BankLoanDto
@using CoreComponents;
@using BusinessEntities;
@{
    ViewBag.Title = "CreateBankLoan";
    Layout = "~/Views/Shared/_GroupLayout.cshtml";
}

@using (Html.BeginForm("CreateBankLoan", "BankLoan", FormMethod.Post))
{
    //bool isView = ViewBag.isView;
    bool isView = ViewBag.isView != null ? ViewBag.isView : false;
    string loanCode = string.IsNullOrWhiteSpace(Model.LoanCode) ? "N/A" : Model.LoanCode;
    ResultDto res = TempData["Result"] != null ? TempData["Result"] as ResultDto : null;
    string message = res != null ? res.Message : string.Empty;
    if (!string.IsNullOrWhiteSpace(message))
    {
        // loanCode = ViewBag.Result.ObjectCode;
    }
    string LoanApplicationDate = string.Empty;
    <div class="row">
        <div class="col-lg-12">
            <!-- Form Elements -->
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <span class="header">Bank Loan Application @(!string.IsNullOrWhiteSpace(Model.Status) ? "(" + Model.Status + ")" : "")</span>
                    <button type="button" class="btn btn-default pull-right lock-dependent" onclick="AddBankLoan();">Add New Bank Loan</button>
                    <button type="button" class="btn btn-default pull-right" onclick="BackToList();">Back To List</button>
                </div>
                @if (!string.IsNullOrWhiteSpace(message))
                {
                    <div class="alert @(res.ObjectId > 0 ? "alert-success" : "alert-danger")">
                        <strong>@(res.ObjectId > 0 ? "Success" : "Error")!</strong> @message
                    </div>
                }
                <div class="panel-body" id="BankLoanApplication">
                    <div class="col-lg-12">
                        <div class="panel-heading">
                            <h4>Loan Application</h4>
                        </div>
                    </div>
                    <div class="row">
                        <input type="hidden" value="@Model.LoanMasterId" id="LoanMasterId" name="LoanMasterId" />
                        <input type="hidden" value="@Model.BankLoanId" id="BankLoanId" name="BankLoanId" />
                        <div class="" id="dvMain">
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Bank Name</label><br>
                                    @Html.DropDownListFor(d => Model.BankEntryId, (SelectList)ViewBag.slBankAh, "Select Bank", new { @class = "form-control required", @id = "BankEntryId" })
                                    @Html.HiddenFor(m => m.LoanCode)
                                </div>
                            </div>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Requested Loan Date</label><br>
                                    @{ string LoanRequestDate = Model.LoanRequestDate.Ticks > 0 ? Model.LoanRequestDate.ToString("dd/MMM/yyyy") : string.Empty;
                                        <input type="text" value="@LoanRequestDate" class="form-control Date-Only financial-year-begin-date-picker required" id="LoanRequestDate" name="LoanRequestDate" placeholder="Select Date" />
                                    }
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Requested Loan Amount</label>
                                    @Html.TextBox("LoanAmountRequested", Model.LoanAmountRequested.ToDisplayCurrency(), new { @class = "form-control required number-only", @id = "LoanAmountRequested" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label> GL Account Head Name</label>
                                    @Html.DropDownListFor(d => Model.GLAHId, (SelectList)ViewBag.slGLAHS, new { @class = "form-control required" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>SL Account Head</label><br />
                                    @Html.DropDownListFor(d => Model.SLAHId, (SelectList)ViewBag.slSLAHS, new { @class = "form-control required", @id = "slAHIds", @onchange = "return changeSLAH(" + Model.GroupId + ");" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>LoanNumber</label>
                                    @Html.TextBoxFor(model => model.LoanNumber, "", new { @class = "form-control required", @id = "LoanNumber", @name = "LoanNumber" })
                                </div>
                            </div>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Loan Approved Date</label><br>
                                    @{ string LoanAmountApprovedDate = Model.LoanAmountApprovedDate.Ticks > 0 ? Model.LoanAmountApprovedDate.ToString("dd/MMM/yyyy") : string.Empty;
                                        <input type="text" value="@LoanAmountApprovedDate" class="form-control Date-Only financial-year-begin-date-picker required" id="LoanAmountApprovedDate" name="LoanAmountApprovedDate" placeholder="Select Date" />
                                    }
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Approved Loan Amount</label>
                                    @Html.TextBox("LoanAmountApproved", Model.LoanAmountApproved.ToDisplayCurrency(), new { @class = "form-control required number-only" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div>
                        <div class="col-lg-12">
                            <div class="panel-heading">
                                <h4>Loan Disbursement</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>DisbursementDate</label><br>
                                    @{ string DisbursedDate = Model.DisbursedDate.Ticks > 0 ? Model.DisbursedDate.ToString("dd/MMM/yyyy") : string.Empty;
                                        <input type="text" value="@DisbursedDate" class="form-control Date-Only financial-year-begin-date-picker required" id="DisbursedDate" name="DisbursedDate" placeholder="Select Date" />
                                    }
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Disbursed Amount</label>
                                    @Html.TextBox("DisbursedAmount", Model.DisbursedAmount.ToDisplayCurrency(), new { @class = "form-control required number-only", @id = "DisbursedAmount" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>No.Of Installments</label>
                                    @Html.TextBoxFor(model => model.NoofInstallments, new { @class = "form-control required" })
                                    @*<input type="text" name="NoofInstallments" maxlength="3" id="NoofInstallments" class="form-control required number-only" />*@
                                </div>
                            </div>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Interest Rate %</label><br />
                                    @Html.TextBoxFor(model => model.InterestRate, "", new { @class = "form-control required number-only", @id = "InterestRate", @name = "InterestRate" })
                                </div>
                            </div>

                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>Reference Number</label>
                                    @Html.TextBoxFor(m => m.ReferenceNumber, new { @class = "form-control required", @id = "ReferenceNumber" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>EMI</label>
                                    @Html.TextBoxFor(m => m.EMI, new { @class = "form-control required number-only", @id = "EMI" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>DueDate</label>
                                    @{ string DueDate = Model.DueDate.Ticks > 0 ? Model.DueDate.ToString("dd/MMM/yyyy") : string.Empty;
                                        <input type="text" value="@DueDate" class="form-control Date-Only financial-year-begin-date-picker required" id="DueDate" name="DueDate" placeholder="Select Date" />
                                    }
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>Narration</label>
                                    @Html.TextBoxFor(m => m.Narration, new { @class = "form-control required", @id = "Narration" })
                                </div>
                            </div>
                        </div>

                        <div class="panel-footer">
                            <div class="form-group">
                                @if (!isView)
                                {
                                    <button type="submit" class="btn btn-outline btn-primary lock-dependent" onclick="return validation();">Submit</button>
                                }
                                @*<button type="reset" class="btn btn-outline btn-primary" onclick="return resetall('@ecnloanmasterid')">Reset</button>*@
                                <button type="button" class="btn btn-default pull-right" onclick="BackToList();">Back To List</button>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @section Scripts {

        @Scripts.Render("~/bundles/jqueryui")
        @Styles.Render("~/Content/cssjqryUi")
        <script type="text/javascript">

        var v = new Date();
        $(function () {

            var isView = ('@isView').toLowerCase() == 'true';

            if (isView) {
                $('#BankLoanApplication').find('input[type="text"],select,textarea').prop('disabled', true);
            }
        });
        $(document).ready(function () {
            menuLink = "menuTransactions";
            subMenuLink = "lnkSideBankLoanApplication";
            LoadMenu();

            $('#LoanRequestDate').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0",
            });
            $('#LoanAmountApprovedDate').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0",
                onSelect: function (selected) {
                    var dt = new Date(selected);
                    dt.setDate(dt.getDate() + 1);
                    $("#LoanRequestDate").datepicker("option", "maxDate", dt);
                }

            });

            $('#DisbursedDate').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0",

                onSelect: function (selected) {
                    var dt = new Date(selected);
                    dt.setDate(dt.getDate() + 1);
                    $("#LoanAmountApprovedDate").datepicker("option", "minDate", dt);
                }
            });
            $('#DueDate').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0",
                onSelect: function (selected) {
                    var dt = new Date(selected);
                    dt.setDate(dt.getDate() + 1);
                    $("#DisbursedDate").datepicker("option", "minDate", dt);
                },

            });

        });
        function BackToList() {
            showProgress();
            window.location.href = '@Url.Content("BankLoanApplicationLookup")';
        }
        function AddBankLoan() {
            showProgress();
            window.location.href = '@Url.Content("CreateBankLoan")';
        }
        function changeSLAH(groupID) {
            var slAHid = $('#slAHIds').val();
            $.post('@Url.Action("checkLoanOutstnding")', { groupID: groupID, SLAHID: slAHid },
                    function (data) {
                        if (data.IsExisted) {
                            alert("This group already having an outstanding amount please verify with bank")
                            return false;
                        }
                        else {
                            $('#LoanNumber').val(data.LinkageNumber);
                        }
                    }, 'json');
        }
        function validation() {

            var validate = true;
            if ($.trim($('#ReferenceNumber').val()) == '' && $.trim($('#Narration').val()) == '' && $.trim($('#slAHIds').val()) == '' && $.trim($('#LoanRequestDate').val()) == '' && $.trim($('#BankEntryId').val()) == '' && $.trim($('#LoanAmountApprovedDate').html()) == '' && $.trim($('#LoanAmountApproved').val()) == '0' && $.trim($('#DisbursedDate').val()) == '' && $.trim($('#NoofInstallments').val()) == '' && $.trim($('#InterestRate').val()) == '0' && $.trim($('#EMI').val()) == '0') {
                $('#ReferenceNumber,#Narration,#DueDate,#LoanAmountRequested,#DisbursedAmount,#slAHIds,#LoanRequestDate,#BankEntryId,#LoanAmountApprovedDate,#LoanAmountApproved,#DisbursedDate,#NoofInstallments,#InterestRate,#EMI').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#ReferenceNumber,#Narration,#DueDate,#LoanAmountRequested,#DisbursedAmount,#slAHIds,#LoanRequestDate,#BankEntryId,#LoanAmountApprovedDate,#LoanAmountApproved,#DisbursedDate,#NoofInstallments,#InterestRate,#EMI').css('border-color', '');

            }
            if ($.trim($('#ReferenceNumber').val()) == '') {
                $('#ReferenceNumber').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#ReferenceNumber').css('border-color', '');

            }
            if ($.trim($('#Narration').val()) == '') {
                $('#Narration').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#Narration').css('border-color', '');

            }
            if ($.trim($('#slAHIds').val()) == '') {
                $('#slAHIds').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#slAHIds').css('border-color', '');

            }
            if ($.trim($('#LoanAmountApproved').val()) == '0') {
                $('#LoanAmountApplied').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#LoanAmountApproved').css('border-color', '');

            }
            if ($.trim($('#LoanRequestDate').val()) == '') {
                $('#LoanRequestDate').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#LoanRequestDate').css('border-color', '');

            }
            if ($.trim($('#BankEntryId').val()) == '') {
                $('#BankEntryId').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#BankEntryId').css('border-color', '');

            }
            if ($.trim($('#LoanAmountApprovedDate').val()) == '') {
                $('#LoanAmountApprovedDate').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#LoanAmountApprovedDate').css('border-color', '');

            }
            if ($.trim($('#DueDate').val()) == '') {
                $('#DueDate').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#DueDate').css('border-color', '');
            }
            if ($.trim($('#DisbursedDate').val()) == '') {
                $('#DisbursedDate').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#DisbursedDate').css('border-color', '');
            }
            if ($.trim($('#NoofInstallments').val()) == '') {
                $('#NoofInstallments').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#NoofInstallments').css('border-color', '');
            }
            if ($.trim($('#InterestRate').val()) == '0') {
                $('#InterestRate').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#InterestRate').css('border-color', '');
            }
            if ($.trim($('#LoanAmountRequested').val()) == '0') {
                $('#LoanAmountRequested').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#LoanAmountRequested').css('border-color', '');
            };
            if ($.trim($('#DisbursedAmount').val()) == '0') {
                $('#DisbursedAmount').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#DisbursedAmount').css('border-color', '');
            };
            if ($.trim($('#EMI').val()) == '0') {
                $('#EMI').css('border-color', 'red');
                validate = false;
            }
            else {
                $('#EMI').css('border-color', '');
            }

            if (!validate)
                return false;
        }
        </script>
    }
                                        }
