@model BusinessEntities.GroupMeetingDto
@using CoreComponents
@{
    ViewBag.Title = "CreateGroupMeeting";
    Layout = "~/Views/Shared/_GroupLayout.cshtml";
}
<style>
    .disabledbutton {
        pointer-events: none;
        opacity: 0.9;
    }
</style>
<script src="~/Scripts/jquery.bpopup.min.js"></script>
<script src="~/Scripts/plugins/momentDate/moment-with-locales.js"></script>
<script src="~/Scripts/plugins/momentDate/moment.js"></script>
@using BusinessEntities;
@using (Html.BeginForm())
{
    int index = 0;
    GroupInfo objgroupInfo = (GroupInfo)HttpContext.Current.Session[Utilities.Constants.SessionKeys.SK_GROUPINFO];
    DateTime dtMeetingDayDefault = new DateTime(DateTime.Now.Year, DateTime.Now.Month, objgroupInfo.MeetingDay);

    string MeetingDate = Model != null && Model.MeetingDate.Ticks > 0 ? Model.MeetingDate.ToDisplayDateFormat() : dtMeetingDayDefault.ToDisplayDateFormat();
    string TransactionDate = Model != null && Model.TransactionDate.Ticks > 0 ? Model.TransactionDate.ToString("dd/MMM/yyyy") : string.Empty;
   
    <div class="row">
        <div class="col-lg-12">
            <!-- Form Elements -->
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <span class="header">Group Meeting @Model.Year - @Model.MonthName</span>
                    <button type="button" class="btn btn-default pull-right" onclick="BackToList();">Back To List</button>
                    @Html.HiddenFor(m => m.GroupMeetingID, new { @class = "form-control", @id = "hdnGroupMeetingId" })
                </div>
                @if (ViewBag.Result != null && ViewBag.Result.ObjectId > 0 && !string.IsNullOrEmpty(ViewBag.Result.Message))
                {
                    <div class="alert alert-success">
                        <strong>Success!</strong> @ViewBag.Result.Message
                    </div>
                }
                else if (ViewBag.Result != null && ViewBag.Result.ObjectId < 0 && !string.IsNullOrEmpty(ViewBag.Result.Message))
                {
                    <div class="alert alert-danger">
                        <strong>Error!</strong> @ViewBag.Result.Message
                    </div>
                }
                <div class="panel-body">
                    <div class="row">
                        @{var clas = "form-control";

                          if (Model.GroupMeetingID > 0)
                          {
                              clas = "form-control disabledbutton";
                          }
                        }
                        <input type="hidden" value="@Model.Year-@Model.MonthName" class= "@clas" id="MeetingYearMonth"  name="MeetingYearMonth" />
                        <div class="col-lg-2 form-group">
                            <label>Meeting Day</label>
                            @Html.DropDownList("MeetingDay", (SelectList)ViewBag.Dates, " ", new { @class = clas, name = "MeetingDay", @id = "MeetingDay", @style = "margin-top: 4px;margin-left: 0px;padding-left: 14px;width:80px" })
                        </div>
                        <br />
                        <div class="col-lg-2" style="bottom: 0px; top: 10px;">
                            <div class="form-group">
                                @Html.CheckBoxFor(m => m.IsConducted, new { @name = "IsConducted", @class = "checkbox-inline" })
                                <label>Not Conducted</label>
                            </div>
                        </div>
                    </div>
                    <div class="row" id="Shownotcoducted">
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>Reason</label>
                                @Html.DropDownListFor(m => m.Reason, (SelectList)ViewBag.Reason, "Select Reason", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>Other Reason</label>
                                @Html.TextAreaFor(m => m.OtherReason,  new { @class = "form-control" })
                            </div>
                        </div>
                    </div>


                    <div class="row" id="Conducted">
                        <div class="col-lg-3">
                            <div class="form-group">
                                <label>Receipt Transaction Date</label>
                                <input type="text" value="@TransactionDate" autocomplete="off" class="form-control required Date-Only" id="TransactionDate" name="TransactionDate" placeholder="Select Transaction Date" />
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>Meeting Comments</label>
                                @Html.TextAreaFor(m => m.MeetingComments, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>Meeting Objective</label>
                                @Html.TextAreaFor(m => m.MeetingObjective, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <strong class="adjc-right-30">
                                <label class="checkbox-inline ">
                                    <input type="checkbox" id="chkall">
                                </label>
                                Select All Member(s)
                            </strong>
                        </div>
                        <hr />
                        <div class="col-lg-12">
                            @if (Model.lstgroupMembersDto != null)
                            {
                                foreach (var Member in Model.lstgroupMembersDto)
                                {
                                    index++;
                                <div class="col-lg-1">
                                    <label class="checkbox-inline adjc-right-60">
                                        <input type="checkbox" id="Checkmember_@index" @(Member.IsAttended ? "checked='checked'" : string.Empty) name="Checkmember_@index" />
                                    </label>
                                </div>
                                <div class="col-lg-5">
                                    <input type="hidden" id="hdnMemberID_@index" name="hdnMemberID_@index" value="@Member.MemberID" />
                                    <label id="hdnMember_@index" name="hdnMember_@index">@Member.MemberName</label>
                                </div>
                                }
                            }

                        </div>

                    </div>
                    <div class="row">
                        <div class="col-lg-12" style="margin: 16px;">
                            @{
                            var BtnText = "ADD";
                            if (Model.GroupMeetingID > 0)
                            {
                                BtnText = "UPDATE";
                            }
                            }
                            <button type="submit" class="btn btn-outline btn-primary" onclick="return ValidateMeeting();">@BtnText</button>
                            <button type="reset" class="btn btn-outline btn-primary">Reset</button>
                        </div>
                        <div class="col-lg-12">
                            @if (ViewBag.lstGroupInfo != null)
                            {
                                int i = 1;
                                List<GroupMeetingDto> lstGroup = ViewBag.lstGroupInfo;
                                <table class="table table-striped table-bordered table-hover" id="tbldepositinterest">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th class="text-center" style="display: none">#</th>
                                            <th>Meeting Type</th>
                                            <th>Meeting Date</th>
                                            <th>Conducted</th>
                                            <th>Members Attended</th>
                                            <th class="text-center">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="depositinterestbody">
                                        @foreach (var grpmeeting in lstGroup)
                                        {
                                            string encryptGroupMeetingID = grpmeeting.GroupMeetingID.EncryptString();
                                            <tr>
                                                <td class="text-center" style="display: none;">
                                                    <input type="hidden" id ="hdngroupMeetingId_@i" name ="hdngroupMeetingId_@i" value="@grpmeeting.GroupMeetingID" />
                                                </td>
                                                <td class="text-center" style="">
                                                    @i
                                                </td>
                                                <td>
                                                    <span>@grpmeeting.MeetingType</span>
                                                </td>
                                                <td>
                                                    <span>@grpmeeting.MeetingDate.ToDisplayDateFormat() </span></td>
                                                <td>
                                                    <span>@grpmeeting.IsConducted</span>
                                                </td>
                                                <td>
                                                    <span>@grpmeeting.MeetingMemberCount</span>
                                                </td>
                                                <td>
                                                    <img src="../../Content/images/Edit.png" onclick="EditGroupMeeting('@encryptGroupMeetingID');" title="Edit Meeting" style="cursor: pointer">
                                                    <img src="../../Content/images/delete_btn1.png" onclick="DeleteGroupMeeting('@encryptGroupMeetingID');" style="cursor: pointer" />
                                                </td>
                                            </tr>
                                            i++;
                                        }
                                    </tbody>
                                </table>
                            }
                        </div>
                    </div>
                    @Html.Hidden("hdnIndex", index)
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <div class="form-group" style="margin-left: 16px;">
                <button type="button" class="btn btn-default pull-right" onclick="BackToList();">Back To List</button>
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/cssjqryUi")
<script>
    $('#Reason').val('@Model.Reason');
    var MeetingDate = new Date($('#MeetingYearMonth').val() + '-' + $('#MeetingDay').val());
    function BackToList() {
        showProgress();
        window.location.href = '@Url.Content("GroupMeetingLookup")';
    }
    function EditGroupMeeting(id) {
        showProgress();
        window.location.href = '@Url.Content("CreateGroupMeeting?id=")' + id
    }
    function ValidateMeeting() {
        if (!check()) {
            hideProgress();
            return false;
        }

        showProgress();
        return true;
    }
    function DeleteGroupMeeting(encryptGroupMeetingID) {
        if (!confirm('If you continue this record will be deleted permanently \n Do you wish to continue?'))
            return false;
        showProgress();
        window.location.href = '@Url.Content("DeleteGroupMeeting?Id=")' + encryptGroupMeetingID;
    }
    function Check() {
        var validateResult = true;
        var isNotConducted = $('#IsConducted').prop('checked').toString() == 'true';
        var RequiredFields = !isNotConducted ? ['MeetingDate', 'StartTime', 'EndTime', 'MeetingComments', 'MeetingObjective'] : ['MeetingDate', 'Reason'];
        for (i = 0; i < RequiredFields.length; i++) {
            if ($('#' + RequiredFields[i]).val() == '') {
                $('#' + RequiredFields[i]).css({ "border": "1px solid Red" })
                validateResult = false;
            }
        }

        if (validateResult && !isNotConducted) {
            if ($('input[id^="Checkmember"]:checked').length < 1) {
                alert('Please select member(s)');
            }
        }
        return validateResult;
    }
    var MeetingYearMonth = '';
    var datemeeting = '';
    var year = 2017;
    var month = 4;
    var meetingday = 0;
    $(document).ready(function () {
        showHideConducted();
        $('#IsConducted').change(function () {
            showHideConducted();
        });
        MeetingYearMonth = $('#MeetingYearMonth').val();
        datemeeting = MeetingYearMonth.split('-');
        year = $.trim(datemeeting[0]);
        month = getMonth($.trim(datemeeting[1]));
        meetingday = $.trim($('#MeetingDay').val());

        $('#TransactionDate').datepicker({
            //dateFormat: "HH/MM",
            dateFormat: "dd/M/yy",
            defaultDate: new Date(parseInt(year), month - 1, 1),
            changeMonth: false,
            changeYear: false,
            yearRange: "-0:+1",
            minDate: new Date(parseInt(year), month - 1, 1),
            hideIfNoPrevNext: true,
            stepMonths: 0
        });
        debugger;
        //$("#TransactionDate").datepicker("option", "minDate", new Date(parseInt(year), month, 1));

    });

    $('#MeetingDate').datepicker({
        //dateFormat: "HH/MM",
        dateFormat: "dd/M/yy",
        changeMonth: true,
        changeYear: true,
        yearRange: "-60:+0"
    });




    $("#chkall").change(function () {
        $('input[id^="Checkmember"]').prop('checked', $(this).prop("checked"));
    });

    function getMonth(monthStr) {
        return new Date(monthStr + '-1-01').getMonth() + 1
    }
    function showHideConducted() {
        var isNotConducted = $('#IsConducted').prop('checked').toString() == 'true';

        if (isNotConducted) {
            $('#Shownotcoducted').show();
            $('#Conducted').hide();
        }
        else {
            $('#Shownotcoducted').hide();
            $('#Conducted').show();
        }
    }
    $(document).ready(function () {
        menuLink = "menuTransactions";
        subMenuLink = "lnkSideGroupMeeting";
        LoadMenu();
    });
</script>
